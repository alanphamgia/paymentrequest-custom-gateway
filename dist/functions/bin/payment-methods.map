{"version":3,"sources":["payment-methods.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,eAAA,gBAAA,QAAA,YAAA,CAAA,CAAA;AASA,IAAI,CAAC,QAAQ,GAAR,CAAY,UAAjB,EAA6B;AAC3B,YAAQ,GAAR,CAAY,8BAAZ,IAA8C,GAA9C,CAD2B,CACuB;AACnD;AAED,QAAQ,OAAR,GAAkB,UAAgB,KAAhB,EAAwC,OAAxC,EAA0D,QAA1D,EAA4E;;AAuC9F,iBAAe,WAAf,CAA2B,QAA3B,EAAoC,OAApC,EAA2C;;;;;;AAExB,mCAAA,CAAA,CAAA,CAAA,SAAA,EAAM,aAAA,OAAA,CAAM,wBAAN,CAAN,CAAA;;AAAb,yCAAa,GAAA,IAAA,EAAb;AACO,mCAAA,CAAA,CAAA,CAAA,SAAA,EAAM,WAAW,IAAX,EAAN,CAAA;;AAAP,mCAAO,GAAA,IAAA,EAAP;AACE,uCAAW,KAAK,KAAL,CAAW,IAAX,CAAX;AACF,qCAAS,SAAS,KAAlB;AAEA,sCAAU,QAAQ,GAAR,CAAY,WAAtB;AACA,wCAAY,QAAQ,GAAR,CAAY,cAAxB;AACA,qCAAS,QAAQ,GAAR,CAAY,OAArB;AACA,wCAAY,kCAAZ;AACJ;AACA;AACA,oCAAQ,GAAR,CAAY,cAAc,SAA1B;AAEI,mCAAO,IAAI,IAAJ,EAAP;AACA,iCAAK,KAAK,QAAL,KAAkB,CAAvB;AACA,iCAAK,KAAK,OAAL,EAAL;AACA,iCAAK,KAAK,WAAL,EAAL;AACA,iCAAK,KAAK,QAAL,EAAL;AACA,kCAAM,KAAK,UAAL,EAAN;AACA,iCAAK,KAAK,UAAL,EAAL;AACA,yCAAa,OAAO,EAAP,IAAa,OAAO,EAAP,EAAW,QAAX,CAAoB,CAApB,EAAuB,GAAvB,CAAb,GAA2C,OAAO,EAAP,EAAW,QAAX,CAAoB,CAApB,EAAuB,GAAvB,CAA3C,GAAyE,OAAO,EAAP,EAAW,QAAX,CAAoB,CAApB,EAAuB,GAAvB,CAAzE,GAAuG,OAAO,GAAP,EAAY,QAAZ,CAAqB,CAArB,EAAwB,GAAxB,CAAvG,GAAsI,OAAO,EAAP,EAAW,QAAX,CAAoB,CAApB,EAAuB,GAAvB,CAAnJ;AAEA,yCAAa,UAAb;AACA,sCAAU,QAAQ,OAAR,CAAgB,QAA1B;AACA,qCAAS,QAAQ,OAAR,CAAgB,MAAzB;AACA,uCAAW,QAAX;AAEA,wCAAY,MAAZ;AAEA,qCAAS,QAAQ,OAAR,CAAgB,QAAzB;AACJ,gCAAG,WAAW,IAAX,IAAmB,WAAW,EAAjC,EAAoC;AAChC,yCAAS,IAAT;AACH,6BAFD,MAIA;AACI,yCAAS,IAAT;AACH;AAEG,uCAAW,KAAX;AACA,yCAAa,EAAb;AACJ,uCAAW,aAAX,IAA4B,OAA5B;AACA,uCAAW,aAAX,IAA4B,KAA5B;AACA,uCAAW,aAAX,IAA4B,OAA5B;AACA;AACA,uCAAW,YAAX,IAA2B,MAA3B;AACA,uCAAW,cAAX,IAA6B,QAA7B;AACA,uCAAW,YAAX,IAA2B,OAA3B;AACA,uCAAW,eAAX,IAA8B,SAA9B;AACA,uCAAW,eAAX,IAA8B,OAA9B;AACA,uCAAW,YAAX,IAA2B,SAAS,GAApC;AACA,uCAAW,eAAX,IAA8B,SAA9B;AACA,uCAAW,YAAX,IAA2B,MAA3B;AACA,uCAAW,gBAAX,IAA+B,UAA/B;AACA;AAEA,gCAAG,aAAa,IAAb,IAAqB,aAAa,EAArC,EAAwC;AACpC,2CAAW,cAAX,IAA6B,QAA7B;AACH;AAED,yCAAa,WAAW,UAAX,CAAb;AAEI,0CAAc,QAAQ,IAAR,CAAd;AACA,uCAAW,YAAY,SAAZ,CAAsB,UAAtB,EAAkC,EAAE,QAAQ,KAAV,EAAlC,CAAX;AACA,qCAAS,QAAQ,QAAR,CAAT;AACA,mCAAO,OAAO,UAAP,CAAkB,QAAlB,EAA4B,SAA5B,CAAP;AACA,qCAAS,KAAK,MAAL,CAAY,OAAO,IAAP,CAAY,QAAZ,EAAsB,OAAtB,CAAZ,EAA4C,MAA5C,CAAmD,KAAnD,CAAT;AACJ,uCAAW,gBAAX,IAA+B,MAA/B;AACA,sCAAU,MAAM,YAAY,SAAZ,CAAsB,UAAtB,EAAkC,EAAE,QAAQ,KAAV,EAAlC,CAAhB;AACA,oCAAQ,GAAR,CAAY,aAAa,MAAzB;AACA,mCAAA,CAAA,CAAA,CAAA,UAAA,EAAO,MAAP,CAAA;;;;AACD;AAED,iBAAS,UAAT,CAAoB,GAApB,EAAuB;AAErB,gBAAI,SAAS,EAAb;AACA,gBAAI,MAAM,EAAV;AACA,gBAAI,GAAJ;AACA,iBAAK,GAAL,IAAY,GAAZ,EAAgB;AACd,oBAAI,IAAI,cAAJ,CAAmB,GAAnB,CAAJ,EAA6B;AAC7B,wBAAI,IAAJ,CAAS,mBAAmB,GAAnB,CAAT;AACC;AACF;AACD,gBAAI,IAAJ;AACE,iBAAK,MAAM,CAAX,EAAc,MAAM,IAAI,MAAxB,EAAgC,KAAhC,EAAuC;AACnC,uBAAO,IAAI,GAAJ,CAAP,IAAmB,mBAAmB,IAAI,IAAI,GAAJ,CAAJ,CAAnB,EAAkC,OAAlC,CAA0C,MAA1C,EAAkD,GAAlD,CAAnB;AACH;AACD,mBAAO,MAAP;AACH;;;;;AA9HO,8BAAU,KAAK,KAAL,CAAW,MAAM,IAAjB,CAAV;AACA,8BAAU,QAAQ,GAAR,CAAY,OAAZ,IAAuB,yBAAjC;AACA,+BAAW,QAAQ,GAAR,CAAY,GAAZ,IAAmB,uBAA9B;AAGW,2BAAA,CAAA,CAAA,CAAA,SAAA,EAAM,aAAA,OAAA,CAAS,UAAO,0DAAP,GAAkE,QAAQ,WAAnF;AAEvB;AAFiB,qBAAA;;AAAX,+BAAW,GAAA,IAAA,EAAX;AAEN;AACA,wBAAI,CAAC,SAAS,EAAd,EAAkB,OAAA,CAAA,CAAA,CAAA,UAAA,EAAO;AACvB,oCAAY,GADW;AAEvB,8BAAM;AAFiB,qBAAP,CAAA;AAKK,2BAAA,CAAA,CAAA,CAAA,SAAA,EAAM,YAAY,QAAZ,EAAqB,OAArB,CAAN,CAAA;;AAAnB,uCAAmB,GAAA,IAAA,EAAnB;AAC2B,2BAAA,CAAA,CAAA,CAAA,SAAA,EAAM,YAAY,SAAZ,EAAsB,OAAtB,CAAN,CAAA;;AAA3B,+CAA2B,GAAA,IAAA,EAA3B;AAEA,8BACF,CAAC;AACC,4BAAI,YADL;AAEC,8BAAM,8BAFP;AAGC,qCAAa;AAHd,qBAAD,EAKA;AACE,4BAAI,oBADN;AAEE,8BAAM,oBAFR;AAGE,qCAAa;AAHf,qBALA,CADE;AAaJ;AACA,2BAAA,CAAA,CAAA,CAAA,UAAA,EAAO;AACL,oCAAY,GADP;AAEL,8BAAM,KAAK,SAAL,CAAe,OAAf,CAFD;AAGL,0CAAgB,gBAHX;AAIL,kDAAwB;AAJnB,qBAAP,CAAA;;;;AAiGD,CAjID","file":"payment-methods.map","sourceRoot":"../../../src/functions/bin","sourcesContent":["\nimport { Context, Callback, APIGatewayEvent } from \"aws-lambda\";\nimport fetch from \"node-fetch\";\n\ninterface SnipcartPaymentMethod {\n  id: string\n  name: string;\n  checkoutUrl: string;\n  iconUrl?: string;\n}\n\nif (!process.env.PRODUCTION) {\n  process.env['NODE_TLS_REJECT_UNAUTHORIZED'] = '0' // For local development\n}\n\nexports.handler = async function (event: APIGatewayEvent, context: Context, callback: Callback) {\n  // Get request's body\n  const request = JSON.parse(event.body)\n  const API_URL = process.env.API_URL || 'https://localhost:12666';\n  const SITE_URL = process.env.URL || 'http://localhost:3000';\n\n  // Validate that the request is coming from Snipcart\n  const response = await fetch(`${API_URL}/api/public/custom-payment-gateway/validate?publicToken=${request.PublicToken}`)\n\n  // Return 404 if the request is not from Snipcart\n  if (!response.ok) return {\n    statusCode: 404,\n    body: \"\"\n  }\n\n  let localbankURLLink = await generateURl('VNBANK',request);\n  let InternationalbankURLLink = await generateURl('INTCARD',request);\n\n  var URljson =\n    [{\n      id: 'local-bank',\n      name: 'Thanh Toán Ngân Hàng Nội Địa',\n      checkoutUrl: localbankURLLink,\n    },\n    {\n      id: 'international-bank',\n      name: 'Thanh Toán Quốc Tế',\n      checkoutUrl: InternationalbankURLLink,\n    }]\n\n\n  // Create payment method list\n  return {\n    statusCode: 200,\n    body: JSON.stringify(URljson),\n    localbankURLLink,\n    InternationalbankURLLink\n  }\n\nasync function generateURl(bankcode,request)\n{\n  let IPresponse = await fetch('http://ip-api.com/json');\n  let data = await IPresponse.text();\n  const readdata = JSON.parse(data);\n  var ipAddr = readdata.query;\n\n  var tmnCode = process.env.vnp_TmnCode;\n  var secretKey = process.env.vnp_HashSecret;\n  var vnpUrl = process.env.vnp_Url;\n  var returnUrl = 'http://localhost:1234/index.html';\n  //var vnp_IpnUrl = 'https://secure-whiteplan.netlify.app/.netlify/functions/confirm-payment';\n  //process.env.SITE_URL + '#/order/' + request.invoice.targetId;\n  console.log(\"returnUrl\" + returnUrl);\n\n  var date = new Date();\n  var mm = date.getMonth() + 1;\n  var dd = date.getDate();\n  var yy = date.getFullYear();\n  var HH = date.getHours();\n  var mmi = date.getMinutes();\n  var ss = date.getSeconds();\n  var datestring = String(yy) + String(mm).padStart(2, '0') + String(dd).padStart(2, '0') + String(HH).padStart(2, '0') + String(mmi).padStart(2, '0') + String(ss).padStart(2, '0');\n\n  var createDate = datestring;\n  var orderId = request.invoice.targetId;\n  var amount = request.invoice.amount;\n  var bankCode = bankcode;\n\n  var orderInfo = 'test';\n  //var orderType = request.body.orderType;\n  var locale = request.invoice.language;\n  if(locale === null || locale === ''){\n      locale = 'vn';\n  }\n  else\n  {\n      locale = 'en';\n  }\n\n  var currCode = 'VND';\n  var vnp_Params = {};\n  vnp_Params['vnp_Version'] = '2.1.0';\n  vnp_Params['vnp_Command'] = 'pay';\n  vnp_Params['vnp_TmnCode'] = tmnCode;\n  // vnp_Params['vnp_Merchant'] = ''\n  vnp_Params['vnp_Locale'] = locale;\n  vnp_Params['vnp_CurrCode'] = currCode;\n  vnp_Params['vnp_TxnRef'] = orderId;\n  vnp_Params['vnp_OrderInfo'] = orderInfo;\n  vnp_Params['vnp_OrderType'] = 'other';\n  vnp_Params['vnp_Amount'] = amount * 100;\n  vnp_Params['vnp_ReturnUrl'] = returnUrl;\n  vnp_Params['vnp_IpAddr'] = ipAddr;\n  vnp_Params['vnp_CreateDate'] = createDate;\n  //vnp_Params['vnp_IpnUrl'] = vnp_IpnUrl;\n\n  if(bankCode !== null && bankCode !== ''){\n      vnp_Params['vnp_BankCode'] = bankCode;\n  }\n\n  vnp_Params = sortObject(vnp_Params);\n\n  var querystring = require('qs');\n  var signData = querystring.stringify(vnp_Params, { encode: false });\n  var crypto = require(\"crypto\");\n  var hmac = crypto.createHmac(\"sha512\", secretKey);\n  var signed = hmac.update(Buffer.from(signData, 'utf-8')).digest(\"hex\");\n  vnp_Params['vnp_SecureHash'] = signed;\n  vnpUrl += '?' + querystring.stringify(vnp_Params, { encode: false });\n  console.log(\"vnpUrl: \" + vnpUrl);\n  return vnpUrl;\n}\n\nfunction sortObject(obj)\n{\n  var sorted = {};\n  var str = [];\n  var key;\n  for (key in obj){\n    if (obj.hasOwnProperty(key)) {\n    str.push(encodeURIComponent(key));\n    }\n  }\n  str.sort();\n    for (key = 0; key < str.length; key++) {\n        sorted[str[key]] = encodeURIComponent(obj[str[key]]).replace(/%20/g, \"+\");\n    }\n    return sorted;\n}\n}"]}