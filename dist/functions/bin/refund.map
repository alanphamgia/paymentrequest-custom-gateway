{"version":3,"sources":["helpers.ts","refund.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAgB,gBAAhB,CACE,KADF,EAEE,YAFF,EAEkB;AAChB,QAAM,mBAAmB,MAAM,qBAAN,CAA4B,YAA5B,CAAzB;AAEA,QAAI,gBAAJ,EAAsB;AACpB,YAAM,aAAa,SAAS,gBAAT,EAA2B,EAA3B,CAAnB;AACA,YAAI,aAAa,GAAjB,EAAsB;AACpB,mBAAO;AACL,4BAAU,UADL;AAEL,sBAAM;AAFD,aAAP;AAID;AACF;AAED,WAAO;AACL,oBAAY,GADP;AAEL,cAAM,KAAK,SAAL,CAAe,YAAf;AAFD,KAAP;AAID;AAnBD,QAAA,gBAAA,GAAA,gBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA,IAAA,SAAA,gBAAA,QAAA,MAAA,CAAA,CAAA;AAEA,IAAA,YAAA,QAAA,YAAA,CAAA;AAGA,IAAI,CAAC,QAAQ,GAAR,CAAY,UAAjB,EAA6B;AAC3B,YAAQ,GAAR,CAAY,8BAAZ,IAA8C,GAA9C,CAD2B,CACuB;AACnD;AAED,QAAQ,OAAR,GAAkB,UAAgB,KAAhB,EAAsC;mCAAG,SAAO,YAAA;;AAEhE,gBAAI,MAAM,UAAN,KAAqB,MAAzB,EAAiC;AAC/B,uBAAA,CAAA,CAAA,CAAA,UAAA,EAAO;AACL,gCAAY,GADP;AAEL,0BAAM;AAFD,iBAAP,CAAA;AAID;AAED,mBAAA,CAAA,CAAA,CAAA,UAAA,EAAO,UAAA,gBAAA,CACL,KADK,EAEL;AACE,0BAAU,OAAA,OAAA;AADZ,aAFK,CAAP,CAAA;;;AAKD,CAdD","file":"refund.map","sourceRoot":"../../../src/functions/bin","sourcesContent":["import { APIGatewayEvent, APIGatewayProxyResult } from \"aws-lambda\";\n\nexport function getResultPayload(\n  event: APIGatewayEvent,\n  fallbackBody: {}): APIGatewayProxyResult {\n  const statusCodeString = event.queryStringParameters['statusCode'];\n\n  if (statusCodeString) {\n    const statusCode = parseInt(statusCodeString, 10)\n    if (statusCode > 299) {\n      return {\n        statusCode,\n        body: ''\n      }\n    }\n  }\n\n  return {\n    statusCode: 200,\n    body: JSON.stringify(fallbackBody)\n  }\n}","\nimport uuid from \"uuid\"\nimport { APIGatewayEvent, APIGatewayProxyResult } from \"aws-lambda\";\nimport { getResultPayload } from \"../helpers\";\n\n\nif (!process.env.PRODUCTION) {\n  process.env['NODE_TLS_REJECT_UNAUTHORIZED'] = '0' // For local development\n}\n\nexports.handler = async function (event: APIGatewayEvent): Promise<APIGatewayProxyResult> {\n\n  if (event.httpMethod !== 'POST') {\n    return {\n      statusCode: 405,\n      body: ''\n    }\n  }\n\n  return getResultPayload(\n    event,\n    {\n      refundId: uuid()\n    });\n}"]}